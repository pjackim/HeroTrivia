{"ast":null,"code":"import * as Papa from 'papaparse';\nexport async function loadFile(fileName, fileObject) {\n  const reader = new FileReader();\n  reader.readAsText(fileObject, \"UTF-8\");\n\n  reader.onload = event => {\n    const file = {\n      name: fileName,\n      text: event.target.result\n    };\n    parseCSV(file);\n  };\n}\nexport function parseCSV(file) {\n  Papa.parse(file.text, {\n    header: true,\n    complete: function (CSVFilePlaces) {\n      let CSVPlaces = CSVFilePlaces.data;\n      processData(CSVPlaces);\n    }\n  });\n}\nexport function processData(fileData) {\n  for (var i = 0; i < fileData.length; i++) {\n    console.log(fileData[i]);\n  }\n}","map":{"version":3,"sources":["/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js"],"names":["Papa","loadFile","fileName","fileObject","reader","FileReader","readAsText","onload","event","file","name","text","target","result","parseCSV","parse","header","complete","CSVFilePlaces","CSVPlaces","data","processData","fileData","i","length","console","log"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,WAAtB;AAGA,OAAO,eAAeC,QAAf,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA6C;AAChD,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,UAAP,CAAkBH,UAAlB,EAA8B,OAA9B;;AACAC,EAAAA,MAAM,CAACG,MAAP,GAAgBC,KAAK,IAAI;AACrB,UAAMC,IAAI,GAAG;AAAEC,MAAAA,IAAI,EAAER,QAAR;AAAkBS,MAAAA,IAAI,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAArC,KAAb;AACAC,IAAAA,QAAQ,CAACL,IAAD,CAAR;AACH,GAHD;AAIH;AAGD,OAAO,SAASK,QAAT,CAAkBL,IAAlB,EAAuB;AAC1BT,EAAAA,IAAI,CAACe,KAAL,CAAWN,IAAI,CAACE,IAAhB,EAAsB;AAClBK,IAAAA,MAAM,EAAE,IADU;AAElBC,IAAAA,QAAQ,EAAE,UAASC,aAAT,EAAwB;AAC9B,UAAIC,SAAS,GAAGD,aAAa,CAACE,IAA9B;AACAC,MAAAA,WAAW,CAACF,SAAD,CAAX;AACH;AALiB,GAAtB;AAOH;AAGD,OAAO,SAASE,WAAT,CAAqBC,QAArB,EAA+B;AAClC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAID,QAAQ,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,CAAD,CAApB;AACH;AACJ","sourcesContent":["import * as Papa from 'papaparse';\n\n\nexport async function loadFile(fileName, fileObject){\n    const reader = new FileReader();\n    reader.readAsText(fileObject, \"UTF-8\");\n    reader.onload = event => {\n        const file = { name: fileName, text: event.target.result };\n        parseCSV(file);\n    };\n}\n\n\nexport function parseCSV(file){\n    Papa.parse(file.text, {\n        header: true,\n        complete: function(CSVFilePlaces) {\n            let CSVPlaces = CSVFilePlaces.data;\n            processData(CSVPlaces);\n        }\n    });\n}\n\n\nexport function processData(fileData) {\n    for (var i = 0; i  < fileData.length; i++) {\n        console.log(fileData[i]);\n    }\n}"]},"metadata":{},"sourceType":"module"}