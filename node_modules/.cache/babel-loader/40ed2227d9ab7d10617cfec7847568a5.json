{"ast":null,"code":"var _jsxFileName = \"/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js\";\nimport * as Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SelectFile() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-selector\",\n      accept: \".csv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), AddFileListener()]\n  }, void 0, true);\n}\n_c = SelectFile;\nexport function AddFileListener() {\n  const fileSelector = document.getElementById('file-selector');\n  fileSelector.addEventListener('change', event => {\n    const fileList = event.target.files;\n    console.log(fileList);\n  });\n}\n_c2 = AddFileListener;\nexport async function loadFile(fileName, fileObject) {\n  const reader = new FileReader();\n  reader.readAsText(fileObject, \"UTF-8\");\n\n  reader.onload = event => {\n    const file = {\n      name: fileName,\n      text: event.target.result\n    };\n    parseCSV(file);\n  };\n}\nexport function parseCSV(file) {\n  Papa.parse(file.text, {\n    header: true,\n    complete: function (CSVFilePlaces) {\n      let CSVPlaces = CSVFilePlaces.data;\n      processData(CSVPlaces);\n    }\n  });\n}\nexport function processData(fileData) {\n  for (var i = 0; i < fileData.length; i++) {\n    console.log(fileData[i]);\n  }\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SelectFile\");\n$RefreshReg$(_c2, \"AddFileListener\");","map":{"version":3,"sources":["/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js"],"names":["Papa","SelectFile","AddFileListener","fileSelector","document","getElementById","addEventListener","event","fileList","target","files","console","log","loadFile","fileName","fileObject","reader","FileReader","readAsText","onload","file","name","text","result","parseCSV","parse","header","complete","CSVFilePlaces","CSVPlaces","data","processData","fileData","i","length"],"mappings":";AAAA,OAAO,KAAKA,IAAZ,MAAsB,WAAtB;;;AAGA,OAAO,SAASC,UAAT,GAAsB;AACzB,sBAAQ;AAAA,4BACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,eAAtB;AAAsC,MAAA,MAAM,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YADA,EAECC,eAAe,EAFhB;AAAA,kBAAR;AAKH;KANeD,U;AAQhB,OAAO,SAASC,eAAT,GAA2B;AAC9B,QAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAArB;AACAF,EAAAA,YAAY,CAACG,gBAAb,CAA8B,QAA9B,EAAyCC,KAAD,IAAW;AACjD,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,GAHD;AAIH;MANeN,e;AAQhB,OAAO,eAAeW,QAAf,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA6C;AAChD,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,UAAP,CAAkBH,UAAlB,EAA8B,OAA9B;;AACAC,EAAAA,MAAM,CAACG,MAAP,GAAgBZ,KAAK,IAAI;AACrB,UAAMa,IAAI,GAAG;AAAEC,MAAAA,IAAI,EAAEP,QAAR;AAAkBQ,MAAAA,IAAI,EAAEf,KAAK,CAACE,MAAN,CAAac;AAArC,KAAb;AACAC,IAAAA,QAAQ,CAACJ,IAAD,CAAR;AACH,GAHD;AAIH;AAGD,OAAO,SAASI,QAAT,CAAkBJ,IAAlB,EAAuB;AAC1BpB,EAAAA,IAAI,CAACyB,KAAL,CAAWL,IAAI,CAACE,IAAhB,EAAsB;AAClBI,IAAAA,MAAM,EAAE,IADU;AAElBC,IAAAA,QAAQ,EAAE,UAASC,aAAT,EAAwB;AAC9B,UAAIC,SAAS,GAAGD,aAAa,CAACE,IAA9B;AACAC,MAAAA,WAAW,CAACF,SAAD,CAAX;AACH;AALiB,GAAtB;AAOH;AAGD,OAAO,SAASE,WAAT,CAAqBC,QAArB,EAA+B;AAClC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAID,QAAQ,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCtB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,QAAQ,CAACC,CAAD,CAApB;AACH;AACJ","sourcesContent":["import * as Papa from 'papaparse';\n\n\nexport function SelectFile() {\n    return (<>\n            <input type=\"file\" id=\"file-selector\" accept=\".csv\"/>\n            {AddFileListener()}\n            </>\n    );\n}\n\nexport function AddFileListener() {\n    const fileSelector = document.getElementById('file-selector');\n    fileSelector.addEventListener('change', (event) => {\n      const fileList = event.target.files;\n      console.log(fileList);\n    });\n}\n\nexport async function loadFile(fileName, fileObject){\n    const reader = new FileReader();\n    reader.readAsText(fileObject, \"UTF-8\");\n    reader.onload = event => {\n        const file = { name: fileName, text: event.target.result };\n        parseCSV(file);\n    };\n}\n\n\nexport function parseCSV(file){\n    Papa.parse(file.text, {\n        header: true,\n        complete: function(CSVFilePlaces) {\n            let CSVPlaces = CSVFilePlaces.data;\n            processData(CSVPlaces);\n        }\n    });\n}\n\n\nexport function processData(fileData) {\n    for (var i = 0; i  < fileData.length; i++) {\n        console.log(fileData[i]);\n    }\n}"]},"metadata":{},"sourceType":"module"}