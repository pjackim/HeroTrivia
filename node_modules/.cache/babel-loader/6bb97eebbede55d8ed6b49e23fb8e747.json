{"ast":null,"code":"var _jsxFileName = \"/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js\";\nimport * as Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var data = [];\nexport function SelectFile() {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"file\",\n    id: \"file-selector\",\n    accept: \".csv\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }, this);\n}\n_c = SelectFile;\nexport function AddFileListener() {\n  const fileSelector = document.getElementById('file-selector');\n  fileSelector.addEventListener('change', event => {\n    const fileList = event.target.files;\n    loadFile(fileList[0]);\n  });\n}\n_c2 = AddFileListener;\nexport async function loadFile(fileObject) {\n  const reader = new FileReader();\n  reader.readAsText(fileObject, \"UTF-8\");\n\n  reader.onload = event => {\n    parseCSV(event.target.result);\n  };\n}\nexport function parseCSV(file) {\n  Papa.parse(file, {\n    header: true,\n    complete: function (CSVFilePlaces) {\n      data = CSVFilePlaces.data;\n      printData(findEntries(\"s\"));\n    }\n  });\n}\nexport function printData(arr) {\n  arr.forEach(element => {\n    console.log(JSON.stringify(element, null, 2));\n  });\n}\nexport function findEntries(letter) {\n  var entries = [];\n  data.forEach(entry => {\n    let position = entry[\"Answer\"].indexOf(letter);\n    if (position > -1) entries.push(entry);\n  });\n  return entries;\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SelectFile\");\n$RefreshReg$(_c2, \"AddFileListener\");","map":{"version":3,"sources":["/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js"],"names":["Papa","data","SelectFile","AddFileListener","fileSelector","document","getElementById","addEventListener","event","fileList","target","files","loadFile","fileObject","reader","FileReader","readAsText","onload","parseCSV","result","file","parse","header","complete","CSVFilePlaces","printData","findEntries","arr","forEach","element","console","log","JSON","stringify","letter","entries","entry","position","indexOf","push"],"mappings":";AAAA,OAAO,KAAKA,IAAZ,MAAsB,WAAtB;;AAEA,OAAO,IAAIC,IAAI,GAAG,EAAX;AAEP,OAAO,SAASC,UAAT,GAAsB;AACzB,sBAAQ;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,eAAtB;AAAsC,IAAA,MAAM,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;KAFeA,U;AAIhB,OAAO,SAASC,eAAT,GAA2B;AAC9B,QAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAArB;AACAF,EAAAA,YAAY,CAACG,gBAAb,CAA8B,QAA9B,EAAyCC,KAAD,IAAW;AACjD,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACAC,IAAAA,QAAQ,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAR;AACD,GAHD;AAIH;MANeN,e;AAQhB,OAAO,eAAeS,QAAf,CAAwBC,UAAxB,EAAmC;AACtC,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,UAAP,CAAkBH,UAAlB,EAA8B,OAA9B;;AACAC,EAAAA,MAAM,CAACG,MAAP,GAAgBT,KAAK,IAAI;AACrBU,IAAAA,QAAQ,CAACV,KAAK,CAACE,MAAN,CAAaS,MAAd,CAAR;AACH,GAFD;AAGH;AAGD,OAAO,SAASD,QAAT,CAAkBE,IAAlB,EAAuB;AAC1BpB,EAAAA,IAAI,CAACqB,KAAL,CAAWD,IAAX,EAAiB;AACbE,IAAAA,MAAM,EAAE,IADK;AAEbC,IAAAA,QAAQ,EAAE,UAASC,aAAT,EAAwB;AAC9BvB,MAAAA,IAAI,GAAGuB,aAAa,CAACvB,IAArB;AACAwB,MAAAA,SAAS,CAACC,WAAW,CAAC,GAAD,CAAZ,CAAT;AACH;AALY,GAAjB;AAOH;AAED,OAAO,SAASD,SAAT,CAAmBE,GAAnB,EAAwB;AAC3BA,EAAAA,GAAG,CAACC,OAAJ,CAAYC,OAAO,IAAI;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAZ;AACH,GAFD;AAGH;AAED,OAAO,SAASH,WAAT,CAAqBQ,MAArB,EAA6B;AAChC,MAAIC,OAAO,GAAG,EAAd;AAEAlC,EAAAA,IAAI,CAAC2B,OAAL,CAAaQ,KAAK,IAAI;AAClB,QAAIC,QAAQ,GAAGD,KAAK,CAAC,QAAD,CAAL,CAAgBE,OAAhB,CAAwBJ,MAAxB,CAAf;AAEA,QAAIG,QAAQ,GAAG,CAAC,CAAhB,EACIF,OAAO,CAACI,IAAR,CAAaH,KAAb;AACP,GALD;AAMA,SAAOD,OAAP;AACH","sourcesContent":["import * as Papa from 'papaparse';\n\nexport var data = [];\n\nexport function SelectFile() {\n    return (<input type=\"file\" id=\"file-selector\" accept=\".csv\"/>);\n}\n\nexport function AddFileListener() {\n    const fileSelector = document.getElementById('file-selector');\n    fileSelector.addEventListener('change', (event) => {\n      const fileList = event.target.files;\n      loadFile(fileList[0]);\n    });\n}\n\nexport async function loadFile(fileObject){\n    const reader = new FileReader();\n    reader.readAsText(fileObject, \"UTF-8\");\n    reader.onload = event => {\n        parseCSV(event.target.result);\n    };\n}\n\n\nexport function parseCSV(file){\n    Papa.parse(file, {\n        header: true,\n        complete: function(CSVFilePlaces) {\n            data = CSVFilePlaces.data\n            printData(findEntries(\"s\"));\n        }\n    });\n}\n\nexport function printData(arr) {\n    arr.forEach(element => {\n        console.log(JSON.stringify(element, null, 2));\n    });\n}\n\nexport function findEntries(letter) {\n    var entries = [];\n\n    data.forEach(entry => {\n        let position = entry[\"Answer\"].indexOf(letter);\n\n        if (position > -1)\n            entries.push(entry);\n    });\n    return entries;\n}"]},"metadata":{},"sourceType":"module"}