{"ast":null,"code":"var _jsxFileName = \"/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js\";\nimport * as Papa from 'papaparse';\nimport { word } from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var data = [];\nexport function SelectFile() {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"file\",\n    id: \"file-selector\",\n    accept: \".csv\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this);\n}\n_c = SelectFile;\nexport function AddFileListener(setData) {\n  const fileSelector = document.getElementById('file-selector');\n  fileSelector.addEventListener('change', event => {\n    const fileList = event.target.files;\n    loadFile(fileList[0], setData);\n  });\n}\n_c2 = AddFileListener;\nexport async function loadFile(fileObject, setData) {\n  const reader = new FileReader();\n  reader.readAsText(fileObject, \"UTF-8\");\n\n  reader.onload = event => {\n    Papa.parse(event.target.result, {\n      header: true,\n      complete: function (CSVFilePlaces) {\n        data = CSVFilePlaces.data;\n        setData(findAllEntries(word));\n        console.log(data);\n      }\n    });\n  };\n}\nexport function parseCSV(file) {}\nexport function printData(arr) {\n  arr.forEach(element => {\n    console.log(JSON.stringify(element, null, 2));\n  });\n}\n\nfunction findEntries(letter) {\n  var entries = [];\n  data.forEach(entry => {\n    let position = entry[\"Answer\"].indexOf(letter);\n    if (position > -1) entries.push(entry);\n  });\n  return entries;\n}\n\nexport function findAllEntries(word) {\n  let long = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var entries = [];\n  [...word].forEach(letter => {\n    var options = findEntries(letter);\n    var index = parseInt(Math.random() * 100 % options.length);\n    var entryData = {};\n\n    if (long) {\n      entryData = {\n        \"Letter\": letter,\n        \"Index\": options[index][\"Answer\"].indexOf(letter),\n        \"Question\": options[index][\"Question\"],\n        \"Answer\": options[index][\"Answer\"],\n        \"Answer Letters\": options[index][\"Answer Letters\"],\n        \"Question Letters\": options[index][\"Question Letters\"],\n        \"Category\": options[index][\"Category\"],\n        \"Publisher\": options[index][\"Publisher\"],\n        \"Series\": options[index][\"Series\"],\n        \"Universe\": options[index][\"Universe\"],\n        \"Difficulty\": options[index][\"Difficulty\"]\n      };\n    } else {\n      entryData = {\n        \"Letter\": letter,\n        \"Index\": options[index][\"Answer\"].indexOf(letter),\n        \"Question\": options[index][\"Question\"],\n        \"Answer\": options[index][\"Answer\"]\n      };\n    }\n\n    entries.push(entryData);\n  });\n  return entries;\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SelectFile\");\n$RefreshReg$(_c2, \"AddFileListener\");","map":{"version":3,"sources":["/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js"],"names":["Papa","word","data","SelectFile","AddFileListener","setData","fileSelector","document","getElementById","addEventListener","event","fileList","target","files","loadFile","fileObject","reader","FileReader","readAsText","onload","parse","result","header","complete","CSVFilePlaces","findAllEntries","console","log","parseCSV","file","printData","arr","forEach","element","JSON","stringify","findEntries","letter","entries","entry","position","indexOf","push","long","options","index","parseInt","Math","random","length","entryData"],"mappings":"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","sourcesContent":["import * as Papa from 'papaparse';\nimport { word } from './Board';\n\nexport var data = [];\n\nexport function SelectFile() {\n    return (<input type=\"file\" id=\"file-selector\" accept=\".csv\"/>);\n}\n\nexport function AddFileListener(setData) {\n    const fileSelector = document.getElementById('file-selector');\n    fileSelector.addEventListener('change', (event) => {\n      const fileList = event.target.files;\n      loadFile(fileList[0], setData);\n    });\n}\n\nexport async function loadFile(fileObject, setData){\n    const reader = new FileReader();\n    reader.readAsText(fileObject, \"UTF-8\");\n    reader.onload = event => {\n\n        Papa.parse(event.target.result, {\n            header: true,\n            complete: function(CSVFilePlaces) {\n                data = CSVFilePlaces.data\n                setData(findAllEntries(word));\n                console.log(data);\n            }\n        });\n    };\n}\n\n\nexport function parseCSV(file){\n\n}\n\nexport function printData(arr) {\n    arr.forEach(element => {\n        console.log(JSON.stringify(element, null, 2));\n    });\n}\n\nfunction findEntries(letter) {\n    var entries = [];\n\n    data.forEach(entry => {\n        let position = entry[\"Answer\"].indexOf(letter);\n\n        if (position > -1)\n            entries.push(entry);\n    });\n    return entries;\n}\n\nexport function findAllEntries(word, long = false) {\n    var entries = [];\n\n    [...word].forEach(letter => {\n        var options = findEntries(letter);\n        var index = parseInt((Math.random() * 100) % options.length);\n\n        var entryData = {}\n\n        if (long) {\n            entryData = {\n                \"Letter\":           letter,\n                \"Index\":            options[index][\"Answer\"].indexOf(letter),\n                \"Question\":         options[index][\"Question\"],\n                \"Answer\":           options[index][\"Answer\"],\n                \"Answer Letters\":   options[index][\"Answer Letters\"],\n                \"Question Letters\": options[index][\"Question Letters\"],\n                \"Category\":         options[index][\"Category\"],\n                \"Publisher\":        options[index][\"Publisher\"],\n                \"Series\":           options[index][\"Series\"],\n                \"Universe\":         options[index][\"Universe\"],\n                \"Difficulty\":       options[index][\"Difficulty\"]\n            }\n        } else {\n            entryData = {\n                \"Letter\":           letter,\n                \"Index\":            options[index][\"Answer\"].indexOf(letter),\n                \"Question\":         options[index][\"Question\"],\n                \"Answer\":           options[index][\"Answer\"]\n            }\n        }\n\n        entries.push(entryData);\n    });\n    return entries;\n}"]},"metadata":{},"sourceType":"module"}