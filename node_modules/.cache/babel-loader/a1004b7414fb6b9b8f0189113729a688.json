{"ast":null,"code":"var _jsxFileName = \"/home/pjackim/coding/personal/comicGame/src/js/Cell.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\";\nimport '../css/Cell.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cell() {\n  _s();\n\n  let pletter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"-\";\n  let pstate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Space';\n  let pspecial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const [state, setState] = useState(pstate);\n  const [special, setSpecial] = useState(pspecial);\n  const [attemptLetter, setAttempt] = useState(\"\");\n  const [letter, setLetter] = useState(pletter);\n  var position = [];\n  const context = {\n    state,\n    setState,\n    special,\n    setSpecial,\n    letter,\n    setLetter,\n    position,\n    attemptLetter,\n    setAttempt\n  };\n  return context;\n}\n\n_s(Cell, \"1vWXq+UkeG9qL33ps90Gk9HlE+M=\");\n\n_c = Cell;\nexport function RenderCell(props) {\n  function handleChange(e, cellContext) {\n    cellContext.setSpecial(e.target.value.toLowerCase() == cellContext.letter.toLowerCase());\n  }\n\n  function handleClick(cellContext, setRow) {\n    setRow(cellContext.position[0]);\n    console.log(\"row\", cellContext.position[0]);\n  }\n\n  let classes = props.content.state,\n      content = '';\n\n  if (classes.includes(\"Cell\")) {\n    classes = props.content.state;\n    classes += props.context.special ? ' Cell-Glow' : ' Cell-Input';\n    content = props.context.special ? props.context.letter : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onClick: () => {\n        handleClick(props.context, props.setRow);\n      },\n      onChange: e => {\n        handleChange(e, props.context, props.setRow);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 68\n    }, this);\n  }\n\n  props.content.state;\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: classes,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"CellContent\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c2 = RenderCell;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"RenderCell\");","map":{"version":3,"sources":["/home/pjackim/coding/personal/comicGame/src/js/Cell.js"],"names":["Component","useState","Cell","pletter","pstate","pspecial","state","setState","special","setSpecial","attemptLetter","setAttempt","letter","setLetter","position","context","RenderCell","props","handleChange","e","cellContext","target","value","toLowerCase","handleClick","setRow","console","log","classes","content","includes"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,iBAAP;;AAGA,eAAe,SAASC,IAAT,GAAiE;AAAA;;AAAA,MAAnDC,OAAmD,uEAAzC,GAAyC;AAAA,MAApCC,MAAoC,uEAA3B,OAA2B;AAAA,MAAlBC,QAAkB,uEAAP,KAAO;AAC5E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACG,MAAD,CAAlC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAACI,QAAD,CAAtC;AACA,QAAM,CAACK,aAAD,EAAgBC,UAAhB,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAACE,OAAD,CAApC;AACA,MAAIW,QAAQ,GAAG,EAAf;AACA,QAAMC,OAAO,GAAG;AAACT,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,UAA3B;AAAuCG,IAAAA,MAAvC;AAA+CC,IAAAA,SAA/C;AAA0DC,IAAAA,QAA1D;AAAoEJ,IAAAA,aAApE;AAAmFC,IAAAA;AAAnF,GAAhB;AAEA,SAAOI,OAAP;AACH;;GATuBb,I;;KAAAA,I;AAaxB,OAAO,SAASc,UAAT,CAAoBC,KAApB,EAA2B;AAC9B,WAASC,YAAT,CAAsBC,CAAtB,EAAyBC,WAAzB,EAAsC;AAClCA,IAAAA,WAAW,CAACX,UAAZ,CAAuBU,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,WAAf,MAAgCH,WAAW,CAACR,MAAZ,CAAmBW,WAAnB,EAAvD;AACH;;AAED,WAASC,WAAT,CAAqBJ,WAArB,EAAkCK,MAAlC,EAA0C;AACtCA,IAAAA,MAAM,CAACL,WAAW,CAACN,QAAZ,CAAqB,CAArB,CAAD,CAAN;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,WAAW,CAACN,QAAZ,CAAqB,CAArB,CAAnB;AACH;;AAED,MAAIc,OAAO,GAAGX,KAAK,CAACY,OAAN,CAAcvB,KAA5B;AAAA,MAAmCuB,OAAO,GAAG,EAA7C;;AACA,MAAID,OAAO,CAACE,QAAR,CAAiB,MAAjB,CAAJ,EAA8B;AAC1BF,IAAAA,OAAO,GAAGX,KAAK,CAACY,OAAN,CAAcvB,KAAxB;AACAsB,IAAAA,OAAO,IAAKX,KAAK,CAACF,OAAN,CAAcP,OAAd,GAAwB,YAAxB,GAAuC,aAAnD;AACAqB,IAAAA,OAAO,GAAIZ,KAAK,CAACF,OAAN,CAAcP,OAAd,GAAyBS,KAAK,CAACF,OAAN,CAAcH,MAAvC,gBAAgD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,OAAO,EAAE,MAAM;AAACY,QAAAA,WAAW,CAACP,KAAK,CAACF,OAAP,EAAeE,KAAK,CAACQ,MAArB,CAAX;AAAwC,OAA3E;AAA6E,MAAA,QAAQ,EAAGN,CAAD,IAAO;AAACD,QAAAA,YAAY,CAACC,CAAD,EAAIF,KAAK,CAACF,OAAV,EAAmBE,KAAK,CAACQ,MAAzB,CAAZ;AAA8C;AAA7I;AAAA;AAAA;AAAA;AAAA,YAA3D;AACH;;AAGGR,EAAAA,KAAK,CAACY,OAAN,CAAcvB,KAAd;AACJ,sBACI;AAAI,IAAA,SAAS,EAAEsB,OAAf;AAAA,2BACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,gBACKC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;MA1Beb,U","sourcesContent":["import { Component, useState } from \"react\";\nimport '../css/Cell.css'\n\n\nexport default function Cell(pletter = \"-\", pstate = 'Space', pspecial = false) {\n    const [state, setState] = useState(pstate);\n    const [special, setSpecial] = useState(pspecial);\n    const [attemptLetter, setAttempt] = useState(\"\");\n    const [letter, setLetter] = useState(pletter);\n    var position = [];\n    const context = {state, setState, special, setSpecial, letter, setLetter, position, attemptLetter, setAttempt};\n\n    return context;\n}\n\n\n\nexport function RenderCell(props) {\n    function handleChange(e, cellContext) {\n        cellContext.setSpecial(e.target.value.toLowerCase() == cellContext.letter.toLowerCase());\n    }\n\n    function handleClick(cellContext, setRow) {\n        setRow(cellContext.position[0]);\n        console.log(\"row\", cellContext.position[0]);\n    }\n\n    let classes = props.content.state, content = '';\n    if (classes.includes(\"Cell\")) {\n        classes = props.content.state;\n        classes += (props.context.special ? ' Cell-Glow' : ' Cell-Input');\n        content = (props.context.special ?  props.context.letter : <input type=\"text\" onClick={() => {handleClick(props.context,props.setRow)}} onChange={(e) => {handleChange(e, props.context, props.setRow);}}/>);\n    } \n\n\n        props.content.state;\n    return (\n        <td className={classes}>\n            <p className=\"CellContent\">\n                {content}\n            </p>\n        </td>\n    )\n}"]},"metadata":{},"sourceType":"module"}