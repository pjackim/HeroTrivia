{"ast":null,"code":"import _slicedToArray from\"/home/pjackim/coding/personal/comicGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Cell,{RenderCell}from\"./Cell\";import'../css/Board.css';import{useState}from\"react/cjs/react.development\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Board(props){return/*#__PURE__*/_jsx(RenderBoard,{dimensions:getDimensions(props),word:props.word,data:props.data});}export var board=[];function CreateBoard(props){board=[];var center=parseInt(props.dimensions.width/2);// Initialize Board\nfor(var row=0;row<props.dimensions[\"height\"];row++){var temp=[];var answer=props.data[row][\"Answer\"];var hintIndex=answer.indexOf(props.data[row][\"Letter\"]);var letterIndex=0;var used=false;for(var col=0;col<props.dimensions[\"width\"];col++){var context={};var start=center-hintIndex;if(col>=start&&col<center+answer.length-hintIndex){context=Cell(answer[letterIndex],true,col-start==props.data[row][\"Index\"]);letterIndex++;}else context=Cell(\"\");context.position=[row,col];temp.push(context);}board.push(temp);}function getRow(arr,rowIdx){return/*#__PURE__*/_jsx(\"tr\",{children:arr.map(function(m,i){return/*#__PURE__*/_jsx(RenderCell,{setRow:props.context.setRow,context:m},\"\".concat(rowIdx,\",\").concat(i));})},rowIdx);}var gridCells=/*#__PURE__*/_jsx(\"tbody\",{children:board.map(function(row,idx){return getRow(row,idx);})});return gridCells;}function RenderBoard(props){// return (\n//     state.hasWon\n//     ? \n//     <div className='winner'>\n//         <div className='neon-orange'>you</div>\n//         <div className='neon-blue'>win</div>\n//     </div>\n//     :\n//     <div>\n//         <div className='Board-title'>\n//             <div className='neon-orange'>Hero</div>\n//             <div className='neon-blue'>Trivia</div>\n//         </div>\n//         <table className='Board'>\n//             {genGridCells()}\n//         </table>\n//     </div>\n// );\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),hasWon=_useState2[0],setHasWon=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),row=_useState4[0],setRow=_useState4[1];var context={hasWon:hasWon,setHasWon:setHasWon,row:row,setRow:setRow};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Board-title\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"neon-orange\",children:\"Hero\"}),/*#__PURE__*/_jsx(\"div\",{className:\"neon-blue\",children:\"Trivia\"})]}),/*#__PURE__*/_jsx(\"table\",{className:\"Board\",children:/*#__PURE__*/_jsx(CreateBoard,{dimensions:props.dimensions,word:props.word,data:props.data,context:context})}),/*#__PURE__*/_jsx(RenderQuestion,{data:props.data,context:context})]});}function RenderQuestion(props){var content=props.data[props.context.row][\"Question\"];return/*#__PURE__*/_jsx(\"div\",{className:\"Question-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"Question-content\",children:content})});}function getDimensions(props){var width=0,height=0;height=props.word.length;props.data.forEach(function(element){if(width<element[\"Answer\"].length)width=element[\"Answer\"].length;});return{\"width\":width*2,\"height\":height};}","map":{"version":3,"sources":["/home/pjackim/coding/personal/comicGame/src/js/Board.js"],"names":["Cell","RenderCell","useState","Board","props","getDimensions","word","data","board","CreateBoard","center","parseInt","dimensions","width","row","temp","answer","hintIndex","indexOf","letterIndex","used","col","context","start","length","position","push","getRow","arr","rowIdx","map","m","i","setRow","gridCells","idx","RenderBoard","hasWon","setHasWon","RenderQuestion","content","height","forEach","element"],"mappings":"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","sourcesContent":["import Cell, { RenderCell } from \"./Cell\";\nimport '../css/Board.css'\nimport { useState } from \"react/cjs/react.development\";\n\n\nexport default function Board(props) {\n    return (<RenderBoard dimensions={getDimensions(props)} word={props.word} data={props.data}/>);\n}\n\nexport var board = [];\n\nfunction CreateBoard(props) {\n    board = [];\n    var center = parseInt(props.dimensions.width / 2);\n    \n    // Initialize Board\n    for (var row = 0; row < props.dimensions[\"height\"]; row++) {\n        var temp = [];\n        var answer = props.data[row][\"Answer\"];\n        var hintIndex = answer.indexOf(props.data[row][\"Letter\"]);\n        var letterIndex = 0;\n        var used = false;\n\n        for (var col = 0; col < props.dimensions[\"width\"]; col++) {\n            var context = {};\n            \n            var start = center - hintIndex;\n            if (col >= start && col < (center + answer.length - hintIndex)) {\n                context = Cell(answer[letterIndex], true, (col - start) == props.data[row][\"Index\"]);\n                letterIndex++;\n                \n            } else\n                context = Cell(\"\");\n\n            context.position = [row, col];\n            temp.push(context);\n        }\n\n        board.push(temp);\n    }\n\n    function getRow(arr, rowIdx){\n        return (\n            <tr key={rowIdx}>\n                {arr.map((m, i) => <RenderCell setRow={props.context.setRow} context={m} key={`${rowIdx},${i}`}/> )}\n            </tr>);\n    }\n\n    const gridCells = <tbody>{board.map((row, idx) => getRow(row, idx))}</tbody>\n    return gridCells;\n}\n\n\nfunction RenderBoard(props) {\n    // return (\n    //     state.hasWon\n    //     ? \n    //     <div className='winner'>\n    //         <div className='neon-orange'>you</div>\n    //         <div className='neon-blue'>win</div>\n    //     </div>\n    //     :\n    //     <div>\n    //         <div className='Board-title'>\n    //             <div className='neon-orange'>Hero</div>\n    //             <div className='neon-blue'>Trivia</div>\n    //         </div>\n    //         <table className='Board'>\n    //             {genGridCells()}\n    //         </table>\n            \n    //     </div>\n    // );\n\n    const [hasWon, setHasWon] = useState(false);\n    const [row, setRow] = useState(0);\n    var context = {hasWon, setHasWon, row, setRow};\n    return (\n        <div>\n            <div className='Board-title'>\n                <div className='neon-orange'>Hero</div>\n                <div className='neon-blue'>Trivia</div>\n            </div>\n            <table className='Board'>\n                <CreateBoard dimensions={props.dimensions} word={props.word} data={props.data} context={context}/>\n            </table>\n            <RenderQuestion data={props.data} context={context}/>\n        </div>\n    );\n}\n\nfunction RenderQuestion(props) {\n    var content = props.data[props.context.row][\"Question\"];\n\n    return (\n        <div className='Question-container'>\n            {/* <div className='Question-title'>\n                Question\n            </div> */}\n            <div className='Question-content'>\n                {content}\n            </div>\n        </div>\n    );\n}\n\n\nfunction getDimensions(props) {\n    var width = 0, height = 0;\n    height = props.word.length;\n\n    props.data.forEach(element => {\n        if (width < element[\"Answer\"].length)\n            width = element[\"Answer\"].length;\n    });\n    return {\"width\": width * 2, \"height\": height};\n}"]},"metadata":{},"sourceType":"module"}