{"ast":null,"code":"import _regeneratorRuntime from\"/home/pjackim/coding/personal/comicGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/pjackim/coding/personal/comicGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/pjackim/coding/personal/comicGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as Papa from'papaparse';import{dataBase}from'../data/data';import{word}from'./Board';import{jsx as _jsx}from\"react/jsx-runtime\";export var data=[];export function SelectFile(){return/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"file-selector\",accept:\".csv\"});}export function AddFileListener(){var fileSelector=document.getElementById('file-selector');fileSelector.addEventListener('change',function(event){var fileList=event.target.files;loadFile(fileList[0]);});}export function loadFile(_x){return _loadFile.apply(this,arguments);}function _loadFile(){_loadFile=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(fileObject){var reader;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:reader=new FileReader();reader.readAsText(fileObject,\"UTF-8\");reader.onload=function(event){Papa.parse(event.target.result,{header:true,complete:function complete(CSVFilePlaces){data=CSVFilePlaces.data;console.log(JSON.stringify(data,null,2));// printData([data]);\n}});};case 3:case\"end\":return _context.stop();}}},_callee);}));return _loadFile.apply(this,arguments);}export function printData(arr){arr.forEach(function(element){if(element[\"Question\"].length>0)console.log(JSON.stringify(element,null,2));});}function findEntries(letter){var entries=[];dataBase.forEach(function(entry){var position=entry[\"Answer\"].indexOf(letter);if(position>-1)entries.push(entry);});return entries;}function findSmallest(count,data){var entries=[];data.forEach(function(element){if(entries.length!=count)entries.push(element);else{for(var i=0;i<entries.length;i++){if(entries[i][\"Answer\"].length>element[\"Answer\"].length)entries[i]=element;}}});return entries;}export function findAllEntries(word){var long=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var entries=[];var wordsUsed=[];_toConsumableArray(word).forEach(function(letter){var options=findEntries(letter);var smallestElement=options[options.length-1];// Get Smallest word for each letter\nvar temp=findSmallest(3,options);var index=parseInt(Math.random()*100%temp.length);var entryData={};if(long){entryData={\"Letter\":letter,\"Index\":options[index][\"Answer\"].indexOf(letter),\"Question\":options[index][\"Question\"],\"Answer\":options[index][\"Answer\"],\"Answer Letters\":options[index][\"Answer Letters\"],\"Question Letters\":options[index][\"Question Letters\"],\"Category\":options[index][\"Category\"],\"Publisher\":options[index][\"Publisher\"],\"Series\":options[index][\"Series\"],\"Universe\":options[index][\"Universe\"],\"Difficulty\":options[index][\"Difficulty\"]};}else{entryData={\"Letter\":letter,\"Index\":options[index][\"Answer\"].indexOf(letter),\"Question\":options[index][\"Question\"],\"Answer\":options[index][\"Answer\"]};}entries.push(entryData);});return entries;}","map":{"version":3,"sources":["/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js"],"names":["Papa","dataBase","word","data","SelectFile","AddFileListener","fileSelector","document","getElementById","addEventListener","event","fileList","target","files","loadFile","fileObject","reader","FileReader","readAsText","onload","parse","result","header","complete","CSVFilePlaces","console","log","JSON","stringify","printData","arr","forEach","element","length","findEntries","letter","entries","entry","position","indexOf","push","findSmallest","count","i","findAllEntries","long","wordsUsed","options","smallestElement","temp","index","parseInt","Math","random","entryData"],"mappings":"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","sourcesContent":["import * as Papa from 'papaparse';\nimport { dataBase } from '../data/data';\nimport { word } from './Board';\n\nexport var data = [];\n\nexport function SelectFile() {\n    return (<input type=\"file\" id=\"file-selector\" accept=\".csv\"/>);\n}\n\nexport function AddFileListener() {\n    const fileSelector = document.getElementById('file-selector');\n    fileSelector.addEventListener('change', (event) => {\n      const fileList = event.target.files;\n      loadFile(fileList[0]);\n    });\n}\n\nexport async function loadFile(fileObject){\n    const reader = new FileReader();\n    reader.readAsText(fileObject, \"UTF-8\");\n    reader.onload = event => {\n\n        Papa.parse(event.target.result, {\n            header: true,\n            complete: function(CSVFilePlaces) {\n                data = CSVFilePlaces.data;\n                console.log(JSON.stringify(data, null, 2));\n                // printData([data]);\n            }\n        });\n    };\n}\n\n\n\nexport function printData(arr) {\n    arr.forEach(element => {\n        if (element[\"Question\"].length > 0)\n            console.log(JSON.stringify(element, null, 2));\n    });\n}\n\nfunction findEntries(letter) {\n    var entries = [];\n\n    dataBase.forEach(entry => {\n        let position = entry[\"Answer\"].indexOf(letter);\n\n        if (position > -1)\n            entries.push(entry);\n    });\n    return entries;\n}\n\nfunction findSmallest(count, data) {\n    var entries = [];\n\n    data.forEach(element => {\n        if (entries.length != count)\n            entries.push(element)\n        else {\n            for (var i = 0; i < entries.length; i++) {\n                if (entries[i][\"Answer\"].length > element[\"Answer\"].length)\n                    entries[i] = element;\n            }\n        }\n    });\n    return entries;\n}\n\nexport function findAllEntries(word, long = false) {\n    var entries = [];\n    var wordsUsed = [];\n\n    [...word].forEach(letter => {\n        var options = findEntries(letter);\n        var smallestElement = options[options.length - 1];\n\n        // Get Smallest word for each letter\n        var temp = findSmallest(3, options);\n\n        var index = parseInt((Math.random() * 100) % temp.length);\n        var entryData = {}\n\n        if (long) {\n            entryData = {\n                \"Letter\":           letter,\n                \"Index\":            options[index][\"Answer\"].indexOf(letter),\n                \"Question\":         options[index][\"Question\"],\n                \"Answer\":           options[index][\"Answer\"],\n                \"Answer Letters\":   options[index][\"Answer Letters\"],\n                \"Question Letters\": options[index][\"Question Letters\"],\n                \"Category\":         options[index][\"Category\"],\n                \"Publisher\":        options[index][\"Publisher\"],\n                \"Series\":           options[index][\"Series\"],\n                \"Universe\":         options[index][\"Universe\"],\n                \"Difficulty\":       options[index][\"Difficulty\"]\n            }\n        } else {\n            entryData = {\n                \"Letter\":           letter,\n                \"Index\":            options[index][\"Answer\"].indexOf(letter),\n                \"Question\":         options[index][\"Question\"],\n                \"Answer\":           options[index][\"Answer\"]\n            }\n        }\n\n        entries.push(entryData);\n    });\n    return entries;\n}"]},"metadata":{},"sourceType":"module"}