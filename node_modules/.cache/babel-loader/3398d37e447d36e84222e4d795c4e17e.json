{"ast":null,"code":"var _jsxFileName = \"/home/pjackim/coding/personal/comicGame/src/js/Board.js\";\nimport { Component, useEffect } from \"react\";\nimport Cell from \"./Cell\";\nimport '../css/Board.css';\nimport { AddFileListener } from \"./ProcessData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const word = \"Parker\";\nexport default function Board(props) {\n  var dimensions = getDimensions(props);\n  return /*#__PURE__*/_jsxDEV(RenderBoard, {\n    dimensions: dimensions,\n    word: props.word,\n    data: props.data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n}\n_c = Board;\n\nfunction CreateBoard(props) {}\n\n_c2 = CreateBoard;\n\nfunction ToggleBoardPosition() {}\n\n_c3 = ToggleBoardPosition;\n\nfunction RenderBoard(props) {\n  // return (\n  //     state.hasWon\n  //     ? \n  //     <div className='winner'>\n  //         <div className='neon-orange'>you</div>\n  //         <div className='neon-blue'>win</div>\n  //     </div>\n  //     :\n  //     <div>\n  //         <div className='Board-title'>\n  //             <div className='neon-orange'>Hero</div>\n  //             <div className='neon-blue'>Trivia</div>\n  //         </div>\n  //         <table className='Board'>\n  //             {genGridCells()}\n  //         </table>\n  //     </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"neon-orange\",\n        children: \"Hero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"neon-blue\",\n        children: \"Trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Board\",\n      children: /*#__PURE__*/_jsxDEV(CreateBoard, {\n        dimensions: props.dimensions,\n        word: props.word,\n        data: props.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = RenderBoard;\n\nfunction getDimensions(props) {\n  var width,\n      height = 0;\n  height = props.word.length;\n  props.data.forEach(element => {\n    if (width < element[\"Answer\"].length) width = element[\"Answer\"].length;\n  });\n  return {\n    \"width\": width,\n    \"height\": height\n  };\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"CreateBoard\");\n$RefreshReg$(_c3, \"ToggleBoardPosition\");\n$RefreshReg$(_c4, \"RenderBoard\");","map":{"version":3,"sources":["/home/pjackim/coding/personal/comicGame/src/js/Board.js"],"names":["Component","useEffect","Cell","AddFileListener","word","Board","props","dimensions","getDimensions","data","CreateBoard","ToggleBoardPosition","RenderBoard","width","height","length","forEach","element"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,OAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,kBAAP;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAEA,OAAO,MAAMC,IAAI,GAAG,QAAb;AAGP,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAIC,UAAU,GAAGC,aAAa,CAACF,KAAD,CAA9B;AAGA,sBAAQ,QAAC,WAAD;AAAa,IAAA,UAAU,EAAEC,UAAzB;AAAqC,IAAA,IAAI,EAAED,KAAK,CAACF,IAAjD;AAAuD,IAAA,IAAI,EAAEE,KAAK,CAACG;AAAnE;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;KALuBJ,K;;AAOxB,SAASK,WAAT,CAAqBJ,KAArB,EAA4B,CAE3B;;MAFQI,W;;AAIT,SAASC,mBAAT,GAA+B,CAE9B;;MAFQA,mB;;AAKT,SAASC,WAAT,CAAqBN,KAArB,EAA4B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,UAAU,EAAEA,KAAK,CAACC,UAA/B;AAA2C,QAAA,IAAI,EAAED,KAAK,CAACF,IAAvD;AAA6D,QAAA,IAAI,EAAEE,KAAK,CAACG;AAAzE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;MAjCQG,W;;AAmCT,SAASJ,aAAT,CAAuBF,KAAvB,EAA8B;AAC1B,MAAIO,KAAJ;AAAA,MAAWC,MAAM,GAAG,CAApB;AACAA,EAAAA,MAAM,GAAGR,KAAK,CAACF,IAAN,CAAWW,MAApB;AAEAT,EAAAA,KAAK,CAACG,IAAN,CAAWO,OAAX,CAAmBC,OAAO,IAAI;AAC1B,QAAIJ,KAAK,GAAGI,OAAO,CAAC,QAAD,CAAP,CAAkBF,MAA9B,EACIF,KAAK,GAAGI,OAAO,CAAC,QAAD,CAAP,CAAkBF,MAA1B;AACP,GAHD;AAIA,SAAO;AAAC,aAASF,KAAV;AAAiB,cAAUC;AAA3B,GAAP;AACH","sourcesContent":["import { Component, useEffect } from \"react\";\nimport Cell from \"./Cell\";\nimport '../css/Board.css'\nimport { AddFileListener } from \"./ProcessData\";\n\nexport const word = \"Parker\";\n\n\nexport default function Board(props) {\n    var dimensions = getDimensions(props);\n\n\n    return (<RenderBoard dimensions={dimensions} word={props.word} data={props.data}/>);\n}\n\nfunction CreateBoard(props) {\n\n}\n\nfunction ToggleBoardPosition() {\n\n}\n\n\nfunction RenderBoard(props) {\n    // return (\n    //     state.hasWon\n    //     ? \n    //     <div className='winner'>\n    //         <div className='neon-orange'>you</div>\n    //         <div className='neon-blue'>win</div>\n    //     </div>\n    //     :\n    //     <div>\n    //         <div className='Board-title'>\n    //             <div className='neon-orange'>Hero</div>\n    //             <div className='neon-blue'>Trivia</div>\n    //         </div>\n    //         <table className='Board'>\n    //             {genGridCells()}\n    //         </table>\n            \n    //     </div>\n    // );\n\n    return (\n        <div>\n            <div className='Board-title'>\n                <div className='neon-orange'>Hero</div>\n                <div className='neon-blue'>Trivia</div>\n            </div>\n            <table className='Board'>\n                <CreateBoard dimensions={props.dimensions} word={props.word} data={props.data}/>\n            </table>\n            \n        </div>\n    );\n}\n\nfunction getDimensions(props) {\n    var width, height = 0;\n    height = props.word.length;\n\n    props.data.forEach(element => {\n        if (width < element[\"Answer\"].length)\n            width = element[\"Answer\"].length;\n    });\n    return {\"width\": width, \"height\": height};\n}"]},"metadata":{},"sourceType":"module"}