[{"/home/pjackim/coding/personal/comicGame/src/index.js":"1","/home/pjackim/coding/personal/comicGame/src/js/App.js":"2","/home/pjackim/coding/personal/comicGame/src/js/reportWebVitals.js":"3","/home/pjackim/coding/personal/comicGame/src/js/Board.js":"4","/home/pjackim/coding/personal/comicGame/src/js/Cell.js":"5","/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js":"6","/home/pjackim/coding/personal/comicGame/src/data/data.js":"7"},{"size":512,"mtime":1640832213872,"results":"8","hashOfConfig":"9"},{"size":1186,"mtime":1641404436538,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1640750781639,"results":"11","hashOfConfig":"9"},{"size":3430,"mtime":1641328738887,"results":"12","hashOfConfig":"9"},{"size":1435,"mtime":1641404876708,"results":"13","hashOfConfig":"9"},{"size":3313,"mtime":1641404942754,"results":"14","hashOfConfig":"9"},{"size":41894,"mtime":1641328236247,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"11ajwfx",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/pjackim/coding/personal/comicGame/src/index.js",[],["32","33"],"/home/pjackim/coding/personal/comicGame/src/js/App.js",["34","35","36"],"/home/pjackim/coding/personal/comicGame/src/js/reportWebVitals.js",[],"/home/pjackim/coding/personal/comicGame/src/js/Board.js",["37","38"],"import Cell, { RenderCell } from \"./Cell\";\nimport '../css/Board.css'\nimport { useState } from \"react/cjs/react.development\";\n\n\nexport default function Board(props) {\n    return (<RenderBoard dimensions={getDimensions(props)} word={props.word} data={props.data}/>);\n}\n\nexport var board = [];\n\nfunction CreateBoard(props) {\n    board = [];\n    var center = parseInt(props.dimensions.width / 2);\n    \n    // Initialize Board\n    for (var row = 0; row < props.dimensions[\"height\"]; row++) {\n        var temp = [];\n        var answer = props.data[row][\"Answer\"];\n        var hintIndex = answer.indexOf(props.data[row][\"Letter\"]);\n        var letterIndex = 0;\n        var used = false;\n\n        for (var col = 0; col < props.dimensions[\"width\"]; col++) {\n            var context = {};\n            \n            var start = center - hintIndex;\n            if (col >= start && col < (center + answer.length - hintIndex)) {\n                context = Cell(answer[letterIndex], true, (col - start) == props.data[row][\"Index\"]);\n                letterIndex++;\n                \n            } else\n                context = Cell(\"\");\n\n            context.position = [row, col];\n            temp.push(context);\n        }\n\n        board.push(temp);\n    }\n\n    function getRow(arr, rowIdx){\n        return (\n            <tr key={rowIdx}>\n                {arr.map((m, i) => <RenderCell setRow={props.context.setRow} context={m} key={`${rowIdx},${i}`}/> )}\n            </tr>);\n    }\n\n    const gridCells = <tbody>{board.map((row, idx) => getRow(row, idx))}</tbody>\n    return gridCells;\n}\n\n\nfunction RenderBoard(props) {\n    // return (\n    //     state.hasWon\n    //     ? \n    //     <div className='winner'>\n    //         <div className='neon-orange'>you</div>\n    //         <div className='neon-blue'>win</div>\n    //     </div>\n    //     :\n    //     <div>\n    //         <div className='Board-title'>\n    //             <div className='neon-orange'>Hero</div>\n    //             <div className='neon-blue'>Trivia</div>\n    //         </div>\n    //         <table className='Board'>\n    //             {genGridCells()}\n    //         </table>\n            \n    //     </div>\n    // );\n\n    const [hasWon, setHasWon] = useState(false);\n    const [row, setRow] = useState(0);\n    var context = {hasWon, setHasWon, row, setRow};\n    return (\n        <div>\n            <div className='Board-title'>\n                <div className='neon-orange'>Hero</div>\n                <div className='neon-blue'>Trivia</div>\n            </div>\n            <table className='Board'>\n                <CreateBoard dimensions={props.dimensions} word={props.word} data={props.data} context={context}/>\n            </table>\n            <RenderQuestion data={props.data} context={context}/>\n        </div>\n    );\n}\n\nfunction RenderQuestion(props) {\n    var content = props.data[props.context.row][\"Question\"];\n\n    return (\n        <div className='Question-container'>\n            {/* <div className='Question-title'>\n                Question\n            </div> */}\n            <div className='Question-content'>\n                {content}\n            </div>\n        </div>\n    );\n}\n\n\nfunction getDimensions(props) {\n    var width = 0, height = 0;\n    height = props.word.length;\n\n    props.data.forEach(element => {\n        if (width < element[\"Answer\"].length)\n            width = element[\"Answer\"].length;\n    });\n    return {\"width\": width * 2, \"height\": height};\n}","/home/pjackim/coding/personal/comicGame/src/js/Cell.js",["39","40"],"/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js",["41","42","43","44"],"/home/pjackim/coding/personal/comicGame/src/data/data.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":18},{"ruleId":"49","severity":1,"message":"53","line":5,"column":10,"nodeType":"51","messageId":"52","endLine":5,"endColumn":25},{"ruleId":"49","severity":1,"message":"54","line":5,"column":43,"nodeType":"51","messageId":"52","endLine":5,"endColumn":53},{"ruleId":"49","severity":1,"message":"55","line":22,"column":13,"nodeType":"51","messageId":"52","endLine":22,"endColumn":17},{"ruleId":"56","severity":1,"message":"57","line":29,"column":73,"nodeType":"58","messageId":"59","endLine":29,"endColumn":75},{"ruleId":"49","severity":1,"message":"60","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":19,"column":61,"nodeType":"58","messageId":"59","endLine":19,"endColumn":63},{"ruleId":"49","severity":1,"message":"61","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":14},{"ruleId":"56","severity":1,"message":"62","line":60,"column":28,"nodeType":"58","messageId":"59","endLine":60,"endColumn":30},{"ruleId":"49","severity":1,"message":"63","line":74,"column":9,"nodeType":"51","messageId":"52","endLine":74,"endColumn":18},{"ruleId":"49","severity":1,"message":"64","line":78,"column":13,"nodeType":"51","messageId":"52","endLine":78,"endColumn":28},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AddFileListener' is defined but never used.","'SelectFile' is defined but never used.","'used' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'word' is defined but never used.","Expected '!==' and instead saw '!='.","'wordsUsed' is assigned a value but never used.","'smallestElement' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]