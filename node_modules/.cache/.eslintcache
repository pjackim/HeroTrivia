[{"/home/pjackim/coding/personal/comicGame/src/index.js":"1","/home/pjackim/coding/personal/comicGame/src/js/App.js":"2","/home/pjackim/coding/personal/comicGame/src/js/reportWebVitals.js":"3","/home/pjackim/coding/personal/comicGame/src/js/Board.js":"4","/home/pjackim/coding/personal/comicGame/src/js/Cell.js":"5","/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js":"6","/home/pjackim/coding/personal/comicGame/src/data/data.js":"7"},{"size":512,"mtime":1641589038189,"results":"8","hashOfConfig":"9"},{"size":1186,"mtime":1641589038192,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1641589038192,"results":"11","hashOfConfig":"9"},{"size":3448,"mtime":1641596258692,"results":"12","hashOfConfig":"9"},{"size":1435,"mtime":1641589038192,"results":"13","hashOfConfig":"9"},{"size":3313,"mtime":1641589038192,"results":"14","hashOfConfig":"9"},{"size":41894,"mtime":1641589038202,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wt1clv",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pjackim/coding/personal/comicGame/src/index.js",[],"/home/pjackim/coding/personal/comicGame/src/js/App.js",["33","34","35"],"import { useState } from 'react';\nimport '../css/App.css';\nimport { dataBase } from '../data/data';\nimport Board from './Board';\nimport { AddFileListener, findAllEntries, SelectFile } from './ProcessData';\n\nexport var word = \"Skyler\";\n\n\n\n// // register jQuery extension\n// jQuery.extend(jQuery.expr[':'], {\n//   focusable: function (el, index, selector) {\n//       return $(el).is('a, button, :input, [tabindex]');\n//   }\n// });\n\n// $(document).on('keypress', 'input,select', function (e) {\n//   if (e.which == 13) {\n//       e.preventDefault();\n//       // Get all focusable elements on the page\n//       var $canfocus = $(':focusable');\n//       var index = $canfocus.index(document.activeElement) + 1;\n//       if (index >= $canfocus.length) index = 0;\n//       $canfocus.eq(index).focus();\n//   }\n// });\n\n\n\n\nexport default function App(props) {\n  // AddFileListener();\n\n  // Set Random Word\n  var index = parseInt(Math.random() * dataBase.length)\n  word = dataBase[index][\"Answer\"];\n  // console.log( dataBase[index][\"Answer\"]);\n\n  var data = findAllEntries(word);\n  // AddFileListener();\n  return (\n    <div className='App'>\n      <Board word={word} data={data}/>\n    </div>\n  );\n}","/home/pjackim/coding/personal/comicGame/src/js/reportWebVitals.js",[],"/home/pjackim/coding/personal/comicGame/src/js/Board.js",["36","37"],"/home/pjackim/coding/personal/comicGame/src/js/Cell.js",["38","39"],"import { Component, useState } from \"react\";\nimport '../css/Cell.css'\n\nexport default function Cell(pletter = \"-\", pstate = false, pspecial = false) {\n    const [state, setState] = useState(pstate);\n    const [special, setSpecial] = useState(pspecial);\n    const [attemptLetter, setAttempt] = useState(\"\");\n    const [letter, setLetter] = useState(pletter);\n    var position = [];\n    const context = {state, setState, special, setSpecial, letter, setLetter, position, attemptLetter, setAttempt};\n\n    return context;\n}\n\n\n\nexport function RenderCell(props) {\n    function handleChange(e, cellContext) {\n        cellContext.setSpecial(e.target.value.toLowerCase() == cellContext.letter.toLowerCase());\n    }\n\n    function handleClick(cellContext, setRow) {\n        setRow(cellContext.position[0]);\n        console.log(\"row\", cellContext.position[0]);\n    }\n\n    let classes = '', content = '';\n    if (props.context.state) {\n        classes = 'Cell';\n        classes += (props.context.special ? ' Cell-Glow' : ' Cell-Input');\n        content = (props.context.special ?  props.context.letter : <input type=\"text\" onFocus={() => {handleClick(props.context,props.setRow)}} onChange={(e) => {handleChange(e, props.context, props.setRow);}}/>);\n    } \n    else \n        classes = 'Space';\n\n\n    return (\n        <td className={classes}>\n            <p className=\"CellContent\">\n                {content}\n            </p>\n        </td>\n    )\n}","/home/pjackim/coding/personal/comicGame/src/js/ProcessData.js",["40","41","42","43"],"import * as Papa from 'papaparse';\nimport { dataBase } from '../data/data';\nimport { word } from './Board';\n\nexport var data = [];\n\nexport function SelectFile() {\n    return (<input type=\"file\" id=\"file-selector\" accept=\".csv\"/>);\n}\n\nexport function AddFileListener() {\n    const fileSelector = document.getElementById('file-selector');\n    fileSelector.addEventListener('change', (event) => {\n      const fileList = event.target.files;\n      loadFile(fileList[0]);\n    });\n}\n\nexport async function loadFile(fileObject){\n    const reader = new FileReader();\n    reader.readAsText(fileObject, \"UTF-8\");\n    reader.onload = event => {\n\n        Papa.parse(event.target.result, {\n            header: true,\n            complete: function(CSVFilePlaces) {\n                data = CSVFilePlaces.data;\n                console.log(JSON.stringify(data, null, 2));\n                // printData([data]);\n            }\n        });\n    };\n}\n\n\n\nexport function printData(arr) {\n    arr.forEach(element => {\n        if (element[\"Question\"].length > 0)\n            console.log(JSON.stringify(element, null, 2));\n    });\n}\n\nfunction findEntries(letter) {\n    var entries = [];\n\n    dataBase.forEach(entry => {\n        let position = entry[\"Answer\"].indexOf(letter);\n\n        if (position > -1)\n            entries.push(entry);\n    });\n    return entries;\n}\n\nfunction findSmallest(count, data) {\n    var entries = [];\n\n    data.forEach(element => {\n        if (entries.length != count)\n            entries.push(element)\n        else {\n            for (var i = 0; i < entries.length; i++) {\n                if (entries[i][\"Answer\"].length > element[\"Answer\"].length)\n                    entries[i] = element;\n            }\n        }\n    });\n    return entries;\n}\n\nexport function findAllEntries(word, long = false) {\n    var entries = [];\n    var wordsUsed = [];\n\n    [...word].forEach(letter => {\n        var options = findEntries(letter);\n        var smallestElement = options[options.length - 1];\n\n        // Get Smallest word for each letter\n        var temp = findSmallest(3, options);\n\n        var index = parseInt((Math.random() * 100) % temp.length);\n        var entryData = {}\n\n        if (long) {\n            entryData = {\n                \"Letter\":           letter,\n                \"Index\":            options[index][\"Answer\"].indexOf(letter),\n                \"Question\":         options[index][\"Question\"],\n                \"Answer\":           options[index][\"Answer\"],\n                \"Answer Letters\":   options[index][\"Answer Letters\"],\n                \"Question Letters\": options[index][\"Question Letters\"],\n                \"Category\":         options[index][\"Category\"],\n                \"Publisher\":        options[index][\"Publisher\"],\n                \"Series\":           options[index][\"Series\"],\n                \"Universe\":         options[index][\"Universe\"],\n                \"Difficulty\":       options[index][\"Difficulty\"]\n            }\n        } else {\n            entryData = {\n                \"Letter\":           letter,\n                \"Index\":            options[index][\"Answer\"].indexOf(letter),\n                \"Question\":         options[index][\"Question\"],\n                \"Answer\":           options[index][\"Answer\"]\n            }\n        }\n\n        entries.push(entryData);\n    });\n    return entries;\n}","/home/pjackim/coding/personal/comicGame/src/data/data.js",[],{"ruleId":"44","severity":1,"message":"45","line":1,"column":10,"nodeType":"46","messageId":"47","endLine":1,"endColumn":18},{"ruleId":"44","severity":1,"message":"48","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":25},{"ruleId":"44","severity":1,"message":"49","line":5,"column":43,"nodeType":"46","messageId":"47","endLine":5,"endColumn":53},{"ruleId":"44","severity":1,"message":"50","line":22,"column":13,"nodeType":"46","messageId":"47","endLine":22,"endColumn":17},{"ruleId":"51","severity":1,"message":"52","line":29,"column":73,"nodeType":"53","messageId":"54","endLine":29,"endColumn":75},{"ruleId":"44","severity":1,"message":"55","line":1,"column":10,"nodeType":"46","messageId":"47","endLine":1,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":19,"column":61,"nodeType":"53","messageId":"54","endLine":19,"endColumn":63},{"ruleId":"44","severity":1,"message":"56","line":3,"column":10,"nodeType":"46","messageId":"47","endLine":3,"endColumn":14},{"ruleId":"51","severity":1,"message":"57","line":60,"column":28,"nodeType":"53","messageId":"54","endLine":60,"endColumn":30},{"ruleId":"44","severity":1,"message":"58","line":74,"column":9,"nodeType":"46","messageId":"47","endLine":74,"endColumn":18},{"ruleId":"44","severity":1,"message":"59","line":78,"column":13,"nodeType":"46","messageId":"47","endLine":78,"endColumn":28},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AddFileListener' is defined but never used.","'SelectFile' is defined but never used.","'used' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'word' is defined but never used.","Expected '!==' and instead saw '!='.","'wordsUsed' is assigned a value but never used.","'smallestElement' is assigned a value but never used."]